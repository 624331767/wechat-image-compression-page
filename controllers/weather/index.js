


const axios = require("axios");
const dayjs = require("dayjs");
const KEY = "441919309e81475ba16855ed331ca8ce"; // Â°´ÂÜôAPI Key
const beseUrl = "https://mg3aap5gqf.re.qweatherapi.com";


// ÁºìÂ≠òÁªìÊûÑÔºölocation => { data, timestamp: dayjsÂÆû‰æã }
const cache = new Map();


// ÁºìÂ≠òÊúâÊïàÊúüÔºå6ÂàÜÈíü
const CACHE_DURATION_MINUTES = 6;

// Ëé∑ÂèñÂüéÂ∏ÇÊêúÁ¥¢ÂÆö‰Ωç‰ø°ÊÅØ
exports.getLocationMethods = async (req, res) => {


  const { location } = req.query;
  if (!location) {
    return res.fail("Áº∫Â∞ë location ÂèÇÊï∞", 400);
  }
  try {
    const response = await axios.get(`${beseUrl}/geo/v2/city/lookup`, {
      headers: {
        "X-QW-Api-Key": KEY,
        "Content-Type": "application/json",
      },
      params: {
        location: location,
      },
    });
    res.success(response.data, "Êü•ËØ¢ÊàêÂäü");
  } catch (error) {
    console.error("ËØ∑Ê±ÇÂ§±Ë¥•:", err.response?.data || err.message);
    res.fail("Êü•ËØ¢Â§±Ë¥•", 500, err.response?.data || err.message);
  }
};

// Ëé∑ÂèñÂÆûÊó∂Â§©Ê∞î‰ø°ÊÅØ
exports.getweatherMethods = async (req, res) => {
  console.log(req, '222');
  const { location } = req.query;
  if (!location) {
    return res.fail("Áº∫Â∞ë location ÂèÇÊï∞", 400);
  }

  const cacheKey = location.trim();
  const now = dayjs();
  const cached = cache.get(cacheKey);

  if (cached && now.diff(cached.timestamp, 'minute') < CACHE_DURATION_MINUTES) {
    // console.log("üì¶ ËøîÂõûÁºìÂ≠òÊï∞ÊçÆÔºàÊú™Ë∂ÖËøá6ÂàÜÈíüÔºâ");
    return res.success(cached.data, "‰ΩøÁî®ÁºìÂ≠òÊï∞ÊçÆ");
  }

  try {
    const response = await axios.get(`${beseUrl}/v7/weather/now`, {
      headers: {
        "X-QW-Api-Key": KEY,
        "Content-Type": "application/json",
      },
      params: { location },
    });

    const weatherData = response.data;

    // Êõ¥Êñ∞ÁºìÂ≠ò
    cache.set(cacheKey, {
      data: weatherData,
      timestamp: now,
    });

    return res.success(weatherData, "Êü•ËØ¢ÊàêÂäü");
  } catch (err) {
    console.error("ËØ∑Ê±ÇÂ§±Ë¥•:", err.response?.data || err.message);

    if (cached) {
      console.log("‚ö†Ô∏è ËØ∑Ê±ÇÂ§±Ë¥•ÔºåËøîÂõûÁºìÂ≠òÊï∞ÊçÆ");
      return res.success(cached.data, "ËØ∑Ê±ÇÂ§±Ë¥•Ôºå‰ΩøÁî®ÁºìÂ≠òÊï∞ÊçÆ");
    }

    return res.fail("Êü•ËØ¢Â§±Ë¥•", 500, err.response?.data || err.message);
  }
};



// Ëé∑ÂèñËµÑËÆØÊï∞ÊçÆ
exports.realTimeInfo = async (req, res) => {
};
